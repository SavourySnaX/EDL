#
#
# 16K Cart Atari 2600	(Standard Bank Switched Atari Cart + SuperChip)
#
#	Pins reflect pins available on cartridge port from 2600
#
#	4 4K Roms + Bank Register + Address Watch + 128 Bytes Ram
#
#  Note roms are handled as single large rom to keep logic to a minimum
#
# LoadRom function can be used to place contents into ROM
# GetDebugByte function can be used to safely query ROM without side effects
#


PIN IN			A[13]	ALIAS	CS[1]:addr[12];				# Address Pins - 4K rom uses A[12] for chip select
PIN BIDIRECTIONAL	D[8];							# Data BUS 

DECLARE	ROM[[14]][8];

DECLARE RAM[[7]][8];

DECLARE INTERNAL bank[2];

HANDLER A	ALWAYS
{
	IF CS
	{
		DECLARE linear[14]	ALIAS	bk[2]:ad[12];

		IF (A>=$1FF6) & (A<=$1FF9)
		{
			bank<-(A[0..1]) ^ %10;		# 6 = %10 , 7 = %11, 8 = %00, 9 = %01  (XOR %10 makes this sequence - %00,%01,%10,%11
		}
		IF (A>=$1100)
		{
			bk<-bank;
			ad<-addr;
			
			D<-ROM[[linear]];
		}
		IF (A>=$1000) & (A<=$107F)
		{
			RAM[[addr]]<-D;
		}
		IF (A>=$1080) & (A<=$10FF)
		{
			D<-RAM[[addr]];
		}
	}
}


### Emulator access functions (loading rom data and debug)

FUNCTION	full[8]	LoadRom		offs[32],byte[8]
{
	full<-1;
	IF offs<=16383
	{
		ROM[[offs&$3FFF]]<-byte;
		full<-0;
	}
}

FUNCTION	byte[8]	GetDebugByte	offs[32]
{
	DECLARE linear[14]	ALIAS	bk[2]:ad[12];

	IF offs>=$1100
	{
		bk<-bank;
		ad<-offs;
		
		byte<-ROM[[linear]];
	}
	IF (offs>=$1080) & (offs<=$10FF)
	{
		byte<-RAM[[offs]];
	}
}






